image:
  name: hashicorp/terraform:1.1.5
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - cd .terraform
  - git clone -b fargate-v1.0.0 --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.rockcontent.com/devops/devops-terraform-ecs.git
  - terraform --version
  - terraform init --backend-config="key=${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}/terraform.tfstate"

stages:
  - validate
  - plan
  - apply
  - destroy

validate:
  stage: validate
  script:
    - export TF_VAR_PROJECT="${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}"
    - export TF_VAR_BRANCH="${CI_COMMIT_BRANCH}"
    - terraform validate
  environment:
    name: $CI_COMMIT_BRANCH

plan:
  stage: plan
  script:
    - export TF_VAR_PROJECT="${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}"
    - export TF_VAR_BRANCH="${CI_COMMIT_BRANCH}"
    - terraform plan -out=../planfile
  dependencies:
    - validate
  environment:
    name: $CI_COMMIT_BRANCH
  artifacts:
    paths:
      - planfile
  when: manual

apply:
  stage: apply
  script:
    - terraform apply -input=false "../planfile"
  dependencies:
    - plan
  environment:
    name: $CI_COMMIT_BRANCH
  when: manual

destroy:
  stage: destroy
  script:
    - export TF_VAR_PROJECT="${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}"; export TF_VAR_BRANCH="${CI_COMMIT_BRANCH}"
    - terraform destroy -input=false -auto-approve
  dependencies:
    - plan
  environment:
    name: $CI_COMMIT_BRANCH
  when: manual
